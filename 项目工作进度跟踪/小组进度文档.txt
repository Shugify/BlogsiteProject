第一周（3.4-3.9）
1.建立小组。
2.对可选的课程项目进行讨论并最终确定小组项目。
3.对项目进行可行性分析并分工写作可行性分析报告草稿。

第二周（3.10-3.17）
1.持续项目沟通、调查，修订可行性分析报告。
2.分工调研流行的CASE工具，最终汇总成文档。
3.结合自己的项目和拟使用的技术路线，选择使用适合的CASE工具，补充、完善可行性分析报告。

第三周（3.18-3.24）
1.分工讨论传统软件开发过程模型与敏捷开发（中几种主要方法）的比较，分析各自的优缺点，最终汇总成文档。
2.结合小组的项目的实际情况，确定项目开发所使用的软件开发过程模型，补充修订可行性报告。
3.对项目中可能存在的风险进行讨论分析，持续修订可行性分析报告。
4.阅读Scrum开发方法文档，对Scrum过程工作模型进行讨论分析，最终汇总成文档。

第四周（3.25-3.31）
1.阅读XP开发方法文档，对XP过程工作模型进行讨论分析，最终汇总成文档。
2.阅读DevOps文档，对DevOps进行讨论分析，最终汇总成文档。
3.根据课本练习题2,3（p97-98) 的软件开发项目活动图，找出关键路径。
4.针对项目进行工作活动分解，讨论并汇总绘出项目活动图，找出关键路径。
5.完成可行性报告并提交

第五周（4.1-4.7）
1.深入理解项目活动图，共同完成本周实验内容一所给练习。
2.练习项目跟踪工具的使用，尝试用甘特图记录跟踪小组项目过程。
3.分工调研国内外软件开发团队组织结构和工作方式对比，最终汇总成文档。

第六周（4.8-4.14）
1.共同讨论了ch3 习题12工作量，最终将讨论结果汇总成文档。
2.共同估算了小组的博客网站项目的初始工作量，并整理成文档。
3.共同讨论了ch3 习题11风险管理，最终将讨论结果汇总成文档。
4.共同分析了自己项目中可能存在的风险，并进一步细化风险管理（做出风险分级及应对预案），最终将分析结果汇总成文档。
5.学习了国标中的文档11《软件需求规格说明SRS》，将对文档的要求和结构及与其他相关文档 （07,08,12,17等）的关系的理解整理成文档。
6.更新了反映项目及小组每个人工作的进度的甘特图。

第七周（4.15-4.21）
1.分工搜集整理软件需求规格说明SRS的编写案例，作为自己项目SRS编写的借鉴与参考。
2.阅读《掌握需求过程(第3版) 》，对比其附录A和国标SRS的模板，分析整理二者的不同和各自的特点，并选择其中必要的部分，补充进自己项目的SRS。
3.参照课本及PPT上的例子，练习用静态建模工具E-R图和UML图对小组项目进行建模，并分析、归纳、总结出符合实际的需求规格。
4.完成SRS写作的小组分工，并开始SRS初稿的撰写。
5.更新了反映项目及小组每个人工作的进度的甘特图。

第八周（4.22-4.28）
1.小组成员各自阅读“SYSTEM MODELLING WITH PETRI NETS”，进一步学习Petri网知识，了解如何应用Petri网对系统进行建模，最后将想法进行讨论，汇总成文档。
2.分工画出小组项目的状态图、Petri网、数据流图、OCL逻辑等。
参考第4章，4.12 皮卡迪里电视广告售卖系统，分析、归纳、总结出符合实际的需求规格。
3.分工协作，用上面的工作补充完善SRS和所负责的项目。
4.更新了反映项目及小组每个人工作的进度的甘特图。

第九周（4.29-5.5）
1.阅读“The Unified Modeling Language Reference Manual”，进一步学习UML知识，理解如何应用UML对系统进行建模，并整理汇总成文档。
2.阅读“LOGIC IN COMPUTER SCIENCE--Modelling and Reasoning about Systems”，了解常用逻辑及其在计算机学科中的应用，并整理汇总成文档。
3.分工协作，将国标“13 - 软件(结构)设计说明(SDD)”等资料和SAD最新标准IEEE-42010.pdf进行对比分析，并整理汇总成文档。
4.分工协作，学习、检索研究经典软件体系结构案例：On-the-Criteria-To-Be-Used-in-Decomposing-Systems-into-Modules.pdf；http://www.cs.cmu.edu/~ModProb/index.html，并整理汇总成文档。
5.完成软件需求规格说明SRS。
6.参考国标“13 - 软件(结构)设计说明(SDD)”等资料和SAD最新标准IEEE-42010.pdf，针对自己的项目设计SAD初稿，并完成SAD写作的小组分工。
7.更新了反映项目及小组每个人工作的进度的甘特图。

第十周（5.6-5.12）
1.将书上各种软件体系结构风格和视图特点进行对比整理，形成文档，并思考自己项目的设计风格为B/S风格。
2.网上搜索最新的软件体系结构资料，如MVC、Kruchten 4+1视图等，并整理汇总成文档。
3.参阅课本和网上资料，研究经典软件体系结构案例KWIC，并整理汇总成文档。
4.针对KWIC和自己的项目，参考课本ch5 表5-3，小组成员每人给几种不同的体系结构风格设计打分，评最佳。
5.根据上述内容，补充和修改自己项目的SAD。
6.更新了反映项目及小组每个人工作的进度的甘特图。

第十一周（5.13-5.19）
1.继续完成上周的实验任务。
2.完成自己项目的SAD。
3.小组讨论确定了项目的下一开发阶段的分工。
4.更新了反映项目及小组每个人工作的进度的甘特图。

第十二周（5.20-5.26）
1.参考教材6.2，结合小组项目的进程和开发历程，从设计原则的几个方面，对各模块进行评估，思考存在的问题和解决方案，形成文档。
2.阅读DI资料：Dependency injection - WikipediaDependency，Injection-A Practical Introduction.pdf，结合查阅其它相关资料，学习依赖注入技术，并整理汇总成文档。
3.更新了反映项目及小组每个人工作的进度的甘特图。
